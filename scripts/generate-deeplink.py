#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä deeplink –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–∞ –≤ Cursor
"""

import json
import os
import sys
import base64
from pathlib import Path

def generate_cursor_deeplink():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç deeplink –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–∞ –≤ Cursor"""
    
    # –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP
    config_path = Path("cursor-mcp.json")
    if not config_path.exists():
        print("‚ùå –§–∞–π–ª cursor-mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return None
    
    # –°–æ–∑–¥–∞–µ–º deeplink
    deeplink_data = {
        "mcpServers": config["mcpServers"]
    }
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
    json_str = json.dumps(deeplink_data, separators=(',', ':'))
    encoded_data = base64.urlsafe_b64encode(json_str.encode('utf-8')).decode('utf-8')
    
    # –°–æ–∑–¥–∞–µ–º deeplink
    deeplink = f"cursor://mcp/add?config={encoded_data}"
    
    return deeplink

def save_deeplink_file(deeplink):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç deeplink –≤ —Ñ–∞–π–ª"""
    # –í Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ /app/data, –∏–Ω–∞—á–µ –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if Path("/app").exists():
        deeplink_file = Path("/app/data/cursor-mcp-deeplink.txt")
    else:
        deeplink_file = Path("cursor-mcp-deeplink.txt")
    
    content = f"""üîó Deeplink –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Wiki.js MCP –≤ Cursor

–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–∞:

{deeplink}

üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
3. –ù–∞–∂–º–∏—Ç–µ Enter
4. Cursor –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç MCP —Å–µ—Ä–≤–µ—Ä

‚ö†Ô∏è –í–∞–∂–Ω–æ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:
- Wiki.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
- –¢–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ —Ñ–∞–π–ª–µ .env
- Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä wikijs-mcp:latest —Å–æ–±—Ä–∞–Ω

üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README-WINDOWS.md
"""
    
    try:
        with open(deeplink_file, 'w', encoding='utf-8') as f:
            f.write(content)
        return deeplink_file
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return None

def main():
    print("üîó –ì–µ–Ω–µ—Ä–∞—Ü–∏—è deeplink –¥–ª—è Cursor")
    print("=" * 40)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º deeplink
    deeplink = generate_cursor_deeplink()
    if not deeplink:
        sys.exit(1)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    deeplink_file = save_deeplink_file(deeplink)
    if not deeplink_file:
        sys.exit(1)
    
    print("‚úÖ Deeplink —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
    print(f"üìÑ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {deeplink_file}")
    print()
    print("üîó Deeplink –¥–ª—è Cursor:")
    print(deeplink)
    print()
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è MCP –≤ Cursor")

if __name__ == "__main__":
    main() 