version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: wikijs_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-wikijs}
      POSTGRES_USER: ${POSTGRES_USER:-wikijs}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-wikijsrocks1}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-wikijs}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - wikijs_network

  # Wiki.js Application
  wiki:
    image: ghcr.io/requarks/wiki:2
    container_name: wikijs_app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-wikijs}
      DB_PASS: ${POSTGRES_PASSWORD:-wikijsrocks1}
      DB_NAME: ${POSTGRES_DB:-wikijs}
      PORT: 3000
      # Отключаем внешние запросы для локализации
      DISABLE_GRAPH_SYNC: true
      DISABLE_LOCALE_SYNC: true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./data/sideload:/wiki/data/sideload
      - ./data/docs:/wiki/data/docs
    networks:
      - wikijs_network

  # MCP Server (только для сборки образа)
  mcp-builder:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: wikijs-mcp:latest
    container_name: wikijs_mcp_builder
    profiles:
      - build

volumes:
  db_data:

networks:
  wikijs_network:
    driver: bridge